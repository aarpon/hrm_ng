<?php

// See http://adldap.sourceforge.net/wiki/doku.php?id=api_configuration for
// detailed help on configuring adLdap.

// Initialize configuration array
$ACTIVE_DIR_CONF = array();

    // The account suffix for your domain
$ACTIVE_DIR_CONF['account_suffix'] = "@mydomain.local";

// The base dn for your domain
$ACTIVE_DIR_CONF['base_dn'] = "DC=mydomain,DC=local";
	
// Array of domain controllers. Specify multiple controllers if you would
// like the class to balance the LDAP queries amongst multiple servers
$ACTIVE_DIR_CONF['domain_controllers'] = array ("dc01.mydomain.local");

// Domain controller port
$ACTIVE_DIR_CONF['ad_port'] = 389;

// Special settings to post-process domain suffixes in an Active Directory
// multi-domain / forest environment. Leave empty in a regular AD setup.
// See the documentation in case you're in an AD forest.
$ACTIVE_DIR_CONF['ad_username_suffix'] = "";
$ACTIVE_DIR_CONF['ad_username_suffix_pattern'] = "";
$ACTIVE_DIR_CONF['ad_username_suffix_replace'] = "";

// Optional account with higher privileges for searching (otherwise
// leave it to NULL). This should be set to a domain admin account (only
// read operations are performed!)
$ACTIVE_DIR_CONF['ad_username'] = NULL;
$ACTIVE_DIR_CONF['ad_password'] = NULL;
    
// Tweak to get the real primary group from Active Directory. It works if
// the user's primary group is domain users.
// http://support.microsoft.com/?kbid=321360
$ACTIVE_DIR_CONF['real_primary_group'] = true;

// Use SSL (LDAPS)
$ACTIVE_DIR_CONF['use_ssl'] = false;
    
// Use TLS: if you wish to use TLS you should ensure that $USE_SSL is
// set to false and vice-versa
$ACTIVE_DIR_CONF['use_tls'] = false;
    
// When querying group memberships, do it recursively
$ACTIVE_DIR_CONF['recursive_groups'] = true;

// Users usually belong to several groups. GROUP_INDEX defines
// which level of the hierarchy to consider (starts by 0). This
// obviously assumes that the sequence of groups memberships is
// constant among users. Set $GROUP_INDEX to -1 to get an array
// with all groups for the user. Please notice that this can also
// be used in combination with the next parameter.
$ACTIVE_DIR_CONF['group_index'] = 0;

// If there is no way to get the desired group by using $GROUP_INDEX,
// this is an additional little trick. For this to work, $GROUP_INDEX
// MUST be set to -1, and the following array must contain the list of
// valid groups to be considered. This way, for each user the complete
// list of groups will be returned from the Active Directory, and of
// those, the one that is contained in the following array will be picked.
// If more than one matching group is found, the first will be taken. If
// no match is found, all groups will be returned.
// Fill the array as follows: $VALID_GROUPS = array( "group1", "group2" )
// with as many groups as you need.
$ACTIVE_DIR_CONF['valid_groups'] = array( );
